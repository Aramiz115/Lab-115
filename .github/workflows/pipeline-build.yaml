name: GOAT Compile

on: 
  push:
      branches:
       - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: "Obteniendo ultima versio del codigo"
        uses: actions/checkout@v3

      - name: "Instalacion de Java"
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: "Compilacion"    
        run: ./mvnw clean install

      - name: "Verificar paquete"
        run: ls -ltra target

  sca:
    runs-on: ubuntu-latest
    steps: 
      - name: "Obteniendo version"
        uses: actions/checkout@v2

      - name: "Instalacion de Java"
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: "Compilacion 2"
        run: ./mvnw clean install

      - name: "Dependency-check"
        uses: dependency-check/Dependency-Check_Action@main
        env:
          JAVA_HOME: /opt/jdk
        id: Depcheck
        with:
          project: 'WebGoat'
          path: '.'
          format: 'HTML'
          out: 'reports' # this is the default, no need to specify unless you wish to override it

      - name: "Resultados del test"
        uses: actions/upload-artifact@master
        with:
          name: "Reporte"
          path: ${{github.workspace}}/reports

      - name: "Verificar reporte"
        run: ls -ltra reports

      - name: "Crear imagen de Docker"
        run: docker build -t prueba ./



      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'prueba'
          format: 'table'

          ignore-unfixed: true
          timeout: 30m


      - name: "Verificar imagen"
        run: docker images
      

      - name: "imagen Docker"
        run: |
          docker build -f Dockerfile . -t webgoat:latest
        
      - name: "run container"
        run: |
          docker run -p 8080:80 -d --name 935 prueba

      - name: Ejecutar escaneo Arachnii
        run: |
          wget -O arachni.tar.gz https://github.com/Arachni/arachni/releases/download/v1.5.1/arachni-1.5.1-0.5.12-linux-x86_64.tar.gz
          tar xvzf arachni.tar.gz
          cd arachni-1.5.1-0.5.12/
          var_IP=$(docker inspect 935 | grep "IPAddress" | tail -1 | cut -d '"' -f 4)
          ./bin/arachni https://$var_IP:8080/WebGoat/login --output-verbose 1 --report-save-path=arachni-report.afr


      - name: "Test"
        run: | 
          docker start 935
          echo "Up server..."
          sleep 45
          docker ps -a 

          docker container stop 935
          docker container rm 935
          

  horusec:
    runs-on: ubuntu-latest
    steps:
      - name: "Obteniendo ultima versio del codigo"
        uses: actions/checkout@v3

      - name: "Instalacion de Java"
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      #- name: "Instalar horusec"
      #  run: curl -fsSL https://raw.githubusercontent.com/ZupIT/horusec/main/deployments/scripts/install.sh | bash -s latest-beta

      - name: "Ejecucion de horusec"
        id: run_horusec
        uses: fike/horusec-action@main
        with:
          arguments: -p="./" --return-error -e="false"
        #run: horusec start -p="./" --return-error -e="false" 


  schedule:
    #        ┌───────────── minute (0 - 59)
    #        │  ┌───────────── hour (0 - 23)
    #        │  │ ┌───────────── day of the month (1 - 31)
    #        │  │ │ ┌───────────── month (1 - 12 or JAN-DEC)
    #        │  │ │ │ ┌───────────── day of the week (0 - 6 or SUN-SAT)
    #        │  │ │ │ │
    #        │  │ │ │ │
    #        │  │ │ │ │
    #        *  * * * *
    - cron: '30 1 * * 0'

permissions:
  contents: read

# Ensure scripts are run with pipefail. See:
# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#exit-codes-and-error-action-preference
defaults:
  run:
    shell: bash

jobs:
  CodeQL-Build:
    # CodeQL runs on ubuntu-latest, windows-latest, and macos-latest
    runs-on: ubuntu-latest
    if: github.repository == 'microsoft/TypeScript'

    permissions:
      # required for all workflows
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@49abf0ba24d0b7953cb586944e918a0b92074c80 # v2.22.4
        with:
          config-file: ./.github/codeql/codeql-configuration.yml
        # Override language selection by uncommenting this and choosing your languages
        # with:
        #   languages: go, javascript, csharp, python, cpp, java

      # Autobuild attempts to build any compiled languages (C/C++, C#, or Java).
      # If this step fails, then you should remove it and run the build manually (see below).
      - name: Autobuild
        uses: github/codeql-action/autobuild@49abf0ba24d0b7953cb586944e918a0b92074c80 # v2.22.4

      # ℹ️ Command-line programs to run using the OS shell.
      # 📚 See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun

      # ✏️ If the Autobuild fails above, remove it and uncomment the following
      #    three lines and modify them (or add more) to build your code if your
      #    project uses a compiled language

      #- run: |
      #     make bootstrap
      #     make release

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@49abf0ba24d0b7953cb586944e918a0b92074c80 # v2.22.4
  